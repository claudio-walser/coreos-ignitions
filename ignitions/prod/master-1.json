{
  "ignition": {
    "version": "2.2.0"
  },
  "networkd": {
    "units": [
      {
        "contents": "[Match]\nName=enp3s0f0\n\n[Network]\nAddress=10.20.10.21/24\nGateway=10.20.10.1\nDNS=8.8.8.8\nDNS=8.8.4.4\n",
        "name": "00-enp3s0f0.network"
      },
      {
        "contents": "[Match]\nName=enp3s0f1\n\n[Network]\nAddress=10.20.11.21/24\nGateway=10.20.11.1\nDNS=8.8.8.8\nDNS=8.8.4.4\n",
        "name": "00-enp3s0f1.network"
      },
      {
        "contents": "[Match]\nName=enp4s0f0\n\n[Network]\nAddress=10.20.12.21/24\nGateway=10.20.12.1\nDNS=8.8.8.8\nDNS=8.8.4.4\n",
        "name": "00-enp4s0f0.network"
      }
    ]
  },
  "passwd": {
    "groups": [
      {
        "name": "ssh"
      }
    ],
    "users": [
      {
        "groups": [
          "sudo",
          "docker",
          "ssh"
        ],
        "name": "claudio",
        "sshAuthorizedKeys": [
          "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCyvOm1lNZQDREfzZyTrR3rFXlqOkcg/gm0qj0Bohi/KSBNrY3Lb2b/7XtAGc6kp4DOYwvyH0I6GxAkQP6heA72OYd3T0sSK/RcMFQHW0DAVTV6CiRhCUV4fKwS57hnZ02sEP3on7gaCD5Mf8gm+zwSoLa+jgZ2MMQrwIz+BcE2rXrMXuPF4QAn9SHSpKA+ja8V/o89Dt4J58awWe3MsccpEnnvkyGoNb82h+Xl96OrCO1Kw5fiuk0LbOs5iVEnxu6rDcU0KFphE4Ggep/BtVPjSwYQDn3fAZ0z3TAUOisi7o+2tY8dq8+AuuvgsUnwpaiUQHpDlxurK5ZQ0/YFzxlVqq1Dm2rk1tuum7xhjimc5HbC5Jq+f7cB9C5MfC7I+uVfjS7PILqY+JEvayTr7C8tYEqD0hF/mmnePLMvTdnL6E5dpkkLKw9DjL3PGpn1KSlspGfY3GRkjzdiMUtrDDym42EflqJn3zAGlm8ZlA2INmOmUgeNr1JJTK2AjycqYIB/GVgG/J6kqf9HaFijGwuSxlyGq3OajKNgtL/WYhpK1O88FXV3rYi03CeG1kdQ3okigibuY+OnKsviUGlOwD+9BHnMnM1exfIYkpflAWI9GxGgFpM7RFuA3Mbag3KeJ0pM7zz+KBPeuSgubVpgpvRe3sIQQ6EWt77kgYk6Ma7C7w== claudio@net-sec.local"
        ]
      },
      {
        "groups": [
          "sudo",
          "docker"
        ],
        "name": "local-admin",
        "passwordHash": "$6$jbwxN8UB$4op7Xz1BPV9SiSz8rkJJ6.zwgpWbe4/sqjs5duXy7e.3zUGh3MDyt11m62iFokkMMrFnYpWtlsJo1grf7XXfy."
      }
    ]
  },
  "storage": {
    "files": [
      {
        "contents": {
          "source": "data:,master-1.net-sec.local"
        },
        "filesystem": "root",
        "mode": 420,
        "path": "/etc/hostname"
      }
    ]
  },
  "systemd": {
    "units": [
      {
        "enable": true,
        "name": "docker.service"
      },
      {
        "contents": "[Unit]\nDescription=keepalived in a Container\nAfter=haproxy.service\nRequires=haproxy.service\n\n[Service]\nTimeoutStartSec=0\nRestart=always\nUser=claudio\nGroup=claudio\nEnvironmentFile=/run/env\nExecStartPre=-/usr/bin/docker pull arcts/keepalived:latest\nExecStartPre=-/usr/bin/docker kill keepalived\nExecStartPre=-/usr/bin/docker rm keepalived\nExecStart=/usr/bin/docker run \t\t\t\t\t\\\n    --net=host\t\t\t\t\t\t\t\t\t\\\n    --cap-add NET_ADMIN \t\t\t\t\t\t\\\n\t-e KEEPALIVED_AUTOCONF=true                 \\\n\t-e KEEPALIVED_STATE=MASTER                  \\\n\t-e KEEPALIVED_INTERFACE=${KEEPALIVED_INTERFACE}              \\\n\t-e KEEPALIVED_VIRTUAL_ROUTER_ID=1           \\\n\t-e KEEPALIVED_UNICAST_SRC_IP=${KEEPALIVED_ADDRESS}    \\\n\t-e KEEPALIVED_UNICAST_PEER_0=${KEEPALIVED_PEER_0}    \\\n\t-e KEEPALIVED_UNICAST_PEER_1=${KEEPALIVED_PEER_1}    \\\n\t-e KEEPALIVED_TRACK_INTERFACE_1=${KEEPALIVED_INTERFACE}      \\\n\t-e KEEPALIVED_VIRTUAL_IPADDRESS_1=\"${KEEPALIVED_VIP}/24 dev ${KEEPALIVED_INTERFACE}\" \\\n\t--name keepalived                     \\\n\tarcts/keepalived:latest\nExecStop=/usr/bin/docker kill keepalived\nExecStopPost=-/usr/bin/docker rm keepalived\n\n[Install]\nWantedBy=multi-user.target\n",
        "enable": true,
        "name": "keepalived.service"
      },
      {
        "contents": "[Unit]\nDescription=Haproxy in a Container\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nTimeoutStartSec=0\nRestart=always\nUser=claudio\nGroup=claudio\nEnvironmentFile=/run/env\nExecStartPre=-/usr/bin/docker pull walser/haproxy:latest\nExecStartPre=-/usr/bin/docker kill haproxy\nExecStartPre=-/usr/bin/docker rm haproxy\nExecStart=/usr/bin/docker run \\\n    -p 8080:8080 \\\n    -p 6444:6443 \\\n    -e LB_HOST=${HOSTNAME} \\\n    --name haproxy \\\n    walser/haproxy:latest\nExecStop=/usr/bin/docker kill haproxy\nExecStopPost=-/usr/bin/docker rm haproxy\n\n[Install]\nWantedBy=multi-user.target\n",
        "enable": true,
        "name": "haproxy.service"
      }
    ]
  }
}